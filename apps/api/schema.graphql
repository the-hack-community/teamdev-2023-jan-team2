"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Image {
  clipSkip: Int
  createdAt: ISO8601DateTime!
  description: String
  height: Int
  id: ID!
  imageSrc: String
  keyword: String
  model: String
  negativePrompt: String
  prompt: String
  sampler: String
  scale: Float
  seed: Float
  steps: Int
  updatedAt: ISO8601DateTime!
  url: String
  userId: Int!
  width: Int
}

"""
Autogenerated input type of ImageCreate
"""
input ImageCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  imageInput: ImageInput!
}

"""
Autogenerated return type of ImageCreate.
"""
type ImageCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  image: Image!
}

"""
Autogenerated input type of ImageDelete
"""
input ImageDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ImageDelete.
"""
type ImageDeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  image: Image!
}

input ImageInput {
  clipSkip: Int
  createdAt: ISO8601DateTime
  description: String
  height: Int
  id: ID
  imageSrc: String
  keyword: String
  model: String
  negativePrompt: String
  prompt: String
  sampler: String
  scale: Float
  seed: Float
  steps: Int
  updatedAt: ISO8601DateTime
  url: String
  userId: Int
  width: Int
}

"""
Autogenerated input type of ImageUpdate
"""
input ImageUpdateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  imageInput: ImageInput!
}

"""
Autogenerated return type of ImageUpdate.
"""
type ImageUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  image: Image!
}

type Mutation {
  """
  Creates a new image
  """
  imageCreate(
    """
    Parameters for ImageCreate
    """
    input: ImageCreateInput!
  ): ImageCreatePayload

  """
  Deletes a image by ID
  """
  imageDelete(
    """
    Parameters for ImageDelete
    """
    input: ImageDeleteInput!
  ): ImageDeletePayload

  """
  Updates a image by id
  """
  imageUpdate(
    """
    Parameters for ImageUpdate
    """
    input: ImageUpdateInput!
  ): ImageUpdatePayload

  """
  Creates a new user
  """
  userCreate(
    """
    Parameters for UserCreate
    """
    input: UserCreateInput!
  ): UserCreatePayload

  """
  Deletes a user by ID
  """
  userDelete(
    """
    Parameters for UserDelete
    """
    input: UserDeleteInput!
  ): UserDeletePayload

  """
  Updates a user by id
  """
  userUpdate(
    """
    Parameters for UserUpdate
    """
    input: UserUpdateInput!
  ): UserUpdatePayload
}

type Query {
  """
  List all users
  """
  allUsers: [User!]!

  """
  Clear User Sessions
  """
  clearUserSessions(email: String!, password: String!): String
  imageById(id: ID!): Image!
  imagesByKeyword(keyword: String!): [Image!]!

  """
  Login a user
  """
  login(email: String!, password: String!): String

  """
  Logout a user
  """
  logout: Boolean!
  userById(id: ID!): User!
}

type User {
  avatarUrl: String
  biography: String
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  images: [Image!]
  password: String
  updatedAt: ISO8601DateTime!
  username: String
}

"""
Autogenerated input type of UserCreate
"""
input UserCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userInput: UserInput!
}

"""
Autogenerated return type of UserCreate.
"""
type UserCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

"""
Autogenerated input type of UserDelete
"""
input UserDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of UserDelete.
"""
type UserDeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

input UserInput {
  avatarUrl: String
  biography: String
  createdAt: ISO8601DateTime
  email: String
  id: ID
  password: String
  updatedAt: ISO8601DateTime
  username: String
}

"""
Autogenerated input type of UserUpdate
"""
input UserUpdateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  userInput: UserInput!
}

"""
Autogenerated return type of UserUpdate.
"""
type UserUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}
